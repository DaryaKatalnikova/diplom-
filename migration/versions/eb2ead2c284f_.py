"""empty message

Revision ID: eb2ead2c284f
Revises: 
Create Date: 2024-05-31 00:30:56.631582

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'eb2ead2c284f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cours',
    sa.Column('id_cours', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('number_cours', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id_cours')
    )
    op.create_table('school',
    sa.Column('id_school', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nameschool', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id_school')
    )
    op.create_table('plan_pay',
    sa.Column('id_planpay', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('summa_b', sa.Float(), nullable=True),
    sa.Column('summa_vb', sa.Float(), nullable=True),
    sa.Column('plan_date', sa.Date(), nullable=True),
    sa.Column('id_cours', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_cours'], ['cours.id_cours'], ),
    sa.PrimaryKeyConstraint('id_planpay')
    )
    op.create_table('ugroup',
    sa.Column('id_group', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name_group', sa.String(length=10), nullable=True),
    sa.Column('id_cours', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_cours'], ['cours.id_cours'], ),
    sa.PrimaryKeyConstraint('id_group')
    )
    op.create_table('student',
    sa.Column('id_student', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('telegram_id', sa.Integer(), nullable=True),
    sa.Column('namee', sa.String(length=100), nullable=True),
    sa.Column('secondname', sa.String(length=100), nullable=True),
    sa.Column('midlename', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('numberphone', sa.String(length=100), nullable=True),
    sa.Column('vidanpasport', sa.String(length=100), nullable=True),
    sa.Column('propiska', sa.String(length=100), nullable=True),
    sa.Column('projivanie', sa.String(length=100), nullable=True),
    sa.Column('numberpasport', sa.String(length=100), nullable=True),
    sa.Column('bazovoeobrazovanie', sa.String(length=100), nullable=True),
    sa.Column('oplata', sa.String(length=100), nullable=True),
    sa.Column('datepasport', sa.Date(), nullable=True),
    sa.Column('datehb', sa.Date(), nullable=True),
    sa.Column('srednocenka', sa.Float(), nullable=True),
    sa.Column('srednocenkaattestat', sa.Float(), nullable=True),
    sa.Column('id_school', sa.Integer(), nullable=True),
    sa.Column('id_group', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_group'], ['ugroup.id_group'], ),
    sa.ForeignKeyConstraint(['id_school'], ['school.id_school'], ),
    sa.PrimaryKeyConstraint('id_student')
    )
    op.create_table('dogovor',
    sa.Column('id_dogovor', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('numberdogovor', sa.String(length=100), nullable=True),
    sa.Column('datedogovor', sa.Date(), nullable=True),
    sa.Column('placeBud', sa.String(length=50), nullable=True),
    sa.Column('id_student', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_student'], ['student.id_student'], name='fkey_dogovor'),
    sa.PrimaryKeyConstraint('id_dogovor')
    )
    op.create_table('ocenki',
    sa.Column('id_ocenki', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('predmet', sa.String(length=100), nullable=True),
    sa.Column('ocenka', sa.Integer(), nullable=True),
    sa.Column('id_student', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_ocenki'], ['student.id_student'], name='fkey_ocenki'),
    sa.PrimaryKeyConstraint('id_ocenki')
    )
    op.create_table('pay',
    sa.Column('id_pay', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('summa', sa.Float(), nullable=True),
    sa.Column('pay_date', sa.Date(), nullable=True),
    sa.Column('id_student', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_student'], ['student.id_student'], ),
    sa.PrimaryKeyConstraint('id_pay')
    )
    op.create_table('roditel',
    sa.Column('id_roditel', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('namee', sa.String(length=100), nullable=True),
    sa.Column('secondname', sa.String(length=100), nullable=True),
    sa.Column('midlename', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('numberphone', sa.String(length=100), nullable=True),
    sa.Column('numberpasport', sa.String(length=100), nullable=True),
    sa.Column('vidanpasport', sa.String(length=100), nullable=True),
    sa.Column('propiska', sa.String(length=100), nullable=True),
    sa.Column('projivanie', sa.String(length=100), nullable=True),
    sa.Column('datepasport', sa.Date(), nullable=True),
    sa.Column('id_student', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_student'], ['student.id_student'], name='fkey_roditel'),
    sa.PrimaryKeyConstraint('id_roditel')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('roditel')
    op.drop_table('pay')
    op.drop_table('ocenki')
    op.drop_table('dogovor')
    op.drop_table('student')
    op.drop_table('ugroup')
    op.drop_table('plan_pay')
    op.drop_table('school')
    op.drop_table('cours')
    # ### end Alembic commands ###
